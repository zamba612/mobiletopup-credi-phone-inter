<?php

declare(strict_types=1);

namespace PackageVersions;

use Composer\InstalledVersions;
use OutOfBoundsException;

class_exists(InstalledVersions::class);

/**
 * This class is generated by composer/package-versions-deprecated, specifically by
 * @see \PackageVersions\Installer
 *
 * This file is overwritten at every run of `composer install` or `composer update`.
 *
 * @deprecated in favor of the Composer\InstalledVersions class provided by Composer 2. Require composer-runtime-api:^2 to ensure it is present.
 */
final class Versions
{
    /**
     * @deprecated please use {@see self::rootPackageName()} instead.
     *             This constant will be removed in version 2.0.0.
     */
    const ROOT_PACKAGE_NAME = 'panda/mobiletopup';

    /**
     * Array of all available composer packages.
     * Dont read this array from your calling code, but use the \PackageVersions\Versions::getVersion() method instead.
     *
     * @var array<string, string>
     * @internal
     */
    const VERSIONS          = array (
  'altorouter/altorouter' => 'v1.2.0@39c50092470128c12284d332bb57f306bb5b58e4',
  'composer/package-versions-deprecated' => 'dev-master@1927b0a81e48643ca45c4a55b34a7645b04f3acc',
  'fig/http-message-util' => 'dev-master@9d94dc0154230ac39e5bf89398b324a86f63f765',
  'firebase/php-jwt' => 'v5.5.1@83b609028194aa042ea33b5af2d41a7427de80e6',
  'google/auth' => 'v1.18.0@21dd478e77b0634ed9e3a68613f74ed250ca9347',
  'google/cloud-core' => 'v1.43.1@60b47793e0c83f0e02a8197ef11ab1f599c348da',
  'google/cloud-firestore' => 'v0.1.0@bcb98c842058b7d16334a51025fa4bbd494d8dac',
  'google/cloud-storage' => 'v1.25.2@d040368605ce3b8c2e6f2f7c03eb4046e9e0b951',
  'google/crc32' => 'v0.1.0@a8525f0dea6fca1893e1bae2f6e804c5f7d007fb',
  'google/gax' => '0.25.0@bca9e3de6fe537761c89db5115f45878243c11ba',
  'google/proto-client' => '0.25.0@fb7f1f7bf750ed0121df6ffcb39add0c8639713a',
  'google/protobuf' => 'v3.19.1@83fe8edf7469ffdd83cb4b4e62249c154f961b9b',
  'grpc/grpc' => '1.42.0@9fa44f104cb92e924d4da547323a97f3d8aca6d4',
  'guzzlehttp/guzzle' => 'dev-master@c1fd316f0a0f3325ed1e7cdbe61030418b868f9f',
  'guzzlehttp/promises' => 'dev-master@fe752aedc9fd8fcca3fe7ad05d419d32998a06da',
  'guzzlehttp/psr7' => 'dev-master@085fb093e038ab0c4f11da732e89cdd47d7586b0',
  'jean85/pretty-package-versions' => 'dev-master@a917488320c20057da87f67d0d40543dd9427f7a',
  'kreait/clock' => '1.1.0@8f1fbc252e4e81298ae7c520597c25e9a6a0f454',
  'kreait/firebase-php' => '6.x-dev@211fa2ac119175680feb662b3825468e313ad36a',
  'kreait/firebase-tokens' => '1.16.1@595ad06cb5f75c188d8fbfdefc9078c3ec8aa5e8',
  'lcobucci/clock' => '2.2.x-dev@a951c82634152ad5738c046a750777a847359f0b',
  'lcobucci/jwt' => '4.0.x-dev@55564265fddf810504110bd68ca311932324b0e9',
  'mongodb/mongodb' => 'v1.8.x-dev@b645f49c8b89a60e7fb5bbe2af00527eb6eb7acf',
  'monolog/monolog' => 'dev-main@fb2c324c17941ffe805aa7c953895af96840d0c9',
  'mtdowling/jmespath.php' => 'dev-master@9b87907a81b87bc76d19a7fb2d61e61486ee9edb',
  'paragonie/random_compat' => 'v9.99.100@996434e5492cb4c3edcb9168db6fbb1359ef965a',
  'paypal/paypal-checkout-sdk' => '1.0.1@ed6a55075448308b87a8b59dcb7fedf04a048cb1',
  'paypal/paypalhttp' => '1.0.0@1ad9b846a046f09d6135cbf2cbaa7701bbc630a3',
  'phpmailer/phpmailer' => 'dev-master@a127e25118a653a60742f909416b5d8fe399dc30',
  'psr/cache' => '2.0.0@213f9dbc5b9bfbc4f8db86d2838dc968752ce13b',
  'psr/http-client' => 'dev-master@22b2ef5687f43679481615605d7a15c557ce85b1',
  'psr/http-factory' => 'dev-master@36fa03d50ff82abcae81860bdaf4ed9a1510c7cd',
  'psr/http-message' => 'dev-master@efd67d1dc14a7ef4fc4e518e7dee91c271d524e4',
  'psr/log' => 'dev-master@fe5ea303b0887d5caefd3d431c3e61ad47037001',
  'psr/simple-cache' => '1.0.1@408d5eafb83c57f6365a3ca330ff23aa4a5fa39b',
  'ralouphie/getallheaders' => '3.0.3@120b605dfeb996808c31b6477290a714d356e822',
  'ramsey/uuid' => '3.x-dev@ffa80ab953edd85d5b6c004f96181a538aad35a3',
  'riverline/multipart-parser' => '2.0.9@ebba10245b5a6e03a673ff52c547d05029caedab',
  'rize/uri-template' => '0.3.4@2a874863c48d643b9e2e254ab288ec203060a0b8',
  'stripe/stripe-php' => 'v7.107.0@a90f74037261ed376c0d37066f396c48809c8e99',
  'symfony/deprecation-contracts' => 'dev-main@893fd20d9ae41a0bae2b9cbdd581ac0cf3917de3',
  'symfony/polyfill-ctype' => 'dev-main@30885182c981ab175d4d034db0f6f469898070ab',
  'symfony/polyfill-mbstring' => 'dev-main@0abb51d2f102e00a4eefcf46ba7fec406d245825',
  'symfony/polyfill-php80' => 'dev-main@57b712b08eddb97c762a8caa32c84e037892d2e9',
  'symfony/polyfill-php81' => 'dev-main@5de4ba2d41b15f9bd0e19b2ab9674135813ec98f',
  'twilio/sdk' => 'dev-main@d4a5ad22e761a14c5e355debb88a6f17640b247c',
  'panda/mobiletopup' => '1.0.0+no-version-set@',
);

    private function __construct()
    {
    }

    /**
     * @psalm-pure
     *
     * @psalm-suppress ImpureMethodCall we know that {@see InstalledVersions} interaction does not
     *                                  cause any side effects here.
     */
    public static function rootPackageName() : string
    {
        if (!self::composer2ApiUsable()) {
            return self::ROOT_PACKAGE_NAME;
        }

        return InstalledVersions::getRootPackage()['name'];
    }

    /**
     * @throws OutOfBoundsException If a version cannot be located.
     *
     * @psalm-param key-of<self::VERSIONS> $packageName
     * @psalm-pure
     *
     * @psalm-suppress ImpureMethodCall we know that {@see InstalledVersions} interaction does not
     *                                  cause any side effects here.
     */
    public static function getVersion(string $packageName): string
    {
        if (self::composer2ApiUsable()) {
            return InstalledVersions::getPrettyVersion($packageName)
                . '@' . InstalledVersions::getReference($packageName);
        }

        if (isset(self::VERSIONS[$packageName])) {
            return self::VERSIONS[$packageName];
        }

        throw new OutOfBoundsException(
            'Required package "' . $packageName . '" is not installed: check your ./vendor/composer/installed.json and/or ./composer.lock files'
        );
    }

    private static function composer2ApiUsable(): bool
    {
        if (!class_exists(InstalledVersions::class, false)) {
            return false;
        }

        if (method_exists(InstalledVersions::class, 'getAllRawData')) {
            $rawData = InstalledVersions::getAllRawData();
            if (count($rawData) === 1 && count($rawData[0]) === 0) {
                return false;
            }
        } else {
            $rawData = InstalledVersions::getRawData();
            if ($rawData === null || $rawData === []) {
                return false;
            }
        }

        return true;
    }
}
